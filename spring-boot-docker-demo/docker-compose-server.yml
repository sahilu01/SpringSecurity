version: '3.9'


#networks:
#  kafka-net:
#    name: kafka-net
#    driver: bridge


services:


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


#  jenkins:
#    image: jenkins/jenkins:lts
#    privileged: true
#    user: root
#    networks:
#      - kafka-net
#    ports:
#      - "8082:8080"
#      - "50001:50000"
#    container_name: jenkins
#    volumes:
#      - ~/jenkins:/var/jenkins_home
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /usr/local/bin/docker:/usr/local/bin/docker

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/warehouse_stock_movement
      SONAR_JDBC_USERNAME: warehouse_stock_movement
      SONAR_JDBC_PASSWORD: warehouse_stock_movement
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"

volumes:
  db:
    driver: local
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
